[{"/Users/tiffanysantos/Projects/React/language-trainer/src/components/Navigation.js":"1","/Users/tiffanysantos/Projects/React/language-trainer/src/App.js":"2","/Users/tiffanysantos/Projects/React/language-trainer/src/components/Home/Home.js":"3","/Users/tiffanysantos/Projects/React/language-trainer/src/components/Contact/Contact.js":"4","/Users/tiffanysantos/Projects/React/language-trainer/src/components/Testimonials/Testimonials.js":"5","/Users/tiffanysantos/Projects/React/language-trainer/src/components/About/About.js":"6","/Users/tiffanysantos/Projects/React/language-trainer/src/components/Services/Services.js":"7","/Users/tiffanysantos/Projects/React/language-trainer/src/components/Information/Information.js":"8","/Users/tiffanysantos/Projects/React/language-trainer/src/components/Footer.js":"9","/Users/tiffanysantos/Projects/React/language-trainer/src/reportWebVitals.js":"10","/Users/tiffanysantos/Projects/React/language-trainer/src/index.js":"11","/Users/tiffanysantos/Projects/React/language-trainer/src/components/index.js":"12","/Users/tiffanysantos/Projects/React/language-trainer/src/components/Contact/ContactForm.js":"13"},{"size":1190,"mtime":1609764728441,"results":"14","hashOfConfig":"15"},{"size":830,"mtime":1609764906566,"results":"16","hashOfConfig":"15"},{"size":1115,"mtime":1609764458408,"results":"17","hashOfConfig":"15"},{"size":825,"mtime":1609926191309,"results":"18","hashOfConfig":"15"},{"size":2244,"mtime":1609762595597,"results":"19","hashOfConfig":"15"},{"size":1802,"mtime":1609764412976,"results":"20","hashOfConfig":"15"},{"size":2188,"mtime":1609764495896,"results":"21","hashOfConfig":"15"},{"size":3985,"mtime":1609764289815,"results":"22","hashOfConfig":"15"},{"size":162,"mtime":1609764969155,"results":"23","hashOfConfig":"15"},{"size":362,"mtime":1609434204595,"results":"24","hashOfConfig":"15"},{"size":500,"mtime":1609434204591,"results":"25","hashOfConfig":"15"},{"size":387,"mtime":1609871474595,"results":"26","hashOfConfig":"15"},{"size":2706,"mtime":1609930240016,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1nlrlyb",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"/Users/tiffanysantos/Projects/React/language-trainer/src/components/Navigation.js",[],["59","60"],"/Users/tiffanysantos/Projects/React/language-trainer/src/App.js",[],"/Users/tiffanysantos/Projects/React/language-trainer/src/components/Home/Home.js",[],["61","62"],"/Users/tiffanysantos/Projects/React/language-trainer/src/components/Contact/Contact.js",[],"/Users/tiffanysantos/Projects/React/language-trainer/src/components/Testimonials/Testimonials.js",[],"/Users/tiffanysantos/Projects/React/language-trainer/src/components/About/About.js",[],["63","64"],"/Users/tiffanysantos/Projects/React/language-trainer/src/components/Services/Services.js",[],"/Users/tiffanysantos/Projects/React/language-trainer/src/components/Information/Information.js",[],["65","66"],"/Users/tiffanysantos/Projects/React/language-trainer/src/components/Footer.js",[],"/Users/tiffanysantos/Projects/React/language-trainer/src/reportWebVitals.js",[],"/Users/tiffanysantos/Projects/React/language-trainer/src/index.js",[],"/Users/tiffanysantos/Projects/React/language-trainer/src/components/index.js",[],"/Users/tiffanysantos/Projects/React/language-trainer/src/components/Contact/ContactForm.js",["67"],"import React, {useState, useEffect } from \"react\";\nimport { useForm } from 'react-hook-form';\nimport './contact.css';\n\n\nfunction encode(data) {\n  return Object.keys(data)\n      .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n      .join(\"&\")\n}\n\nexport function ContactForm () {\n  \n  const { register, handleSubmit, errors } = useForm();\n  const onSubmit = data => data.preventDefault()\n  fetch('/', {\n    method: 'POST',\n    headers: {\n      'Content-type' : \"application/x-www-form-urlencoded\"},\n      body: onSubmit\n      .then(() => {\n        alert('worked')\n    })\n  })\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    if ( window.location.search.includes('success=true') ) {\n      setSuccess(true);\n    }\n  }, []);\n\n  return (\n    <div className=\"ContactForm\">\n      <form name=\"ContactForm\" \n            method=\"POST\" \n            action=\"/contact/?success=true\"\n            data-netlify=\"true\" \n            netlify-honeypot=\"bot-field\"\n            data-netlify-recaptcha=\"true\"\n            onSubmit={handleSubmit(onSubmit)}>\n      <input type=\"hidden\" name=\"form-name\" value=\"ContactForm\" />\n      <div className=\"form-control\">\n      {success && (\n          <p style={{ color: \"green\" }}>Thanks for your message! </p>\n        )}\n          <p class=\"hidden\">\n            <label>Don’t fill this out if you’re human: <input name=\"bot-field\" /></label>\n          </p>\n          \n              <label>Name</label>\n          <input type=\"text\" name=\"Name\" ref={register({ required: true})} />\n          {errors.Name && <span>This field is required</span>}\n        </div>\n        <div className=\"form-control\">\n          <label>Email</label>\n          <input type=\"text\" name=\"Email\" ref={register({ required: true })} />\n          {errors.Email && <span>This field is required</span>}\n        </div>\n        <div className=\"form-control\">\n          <label>Level</label>\n          <select name=\"Level\" ref={register({ required: true })}>\n            <option value=\"Beginner\">Beginner</option>\n            <option value=\"Intermediate\">Intermediate</option>\n            <option value=\"Advanced\">Advanced</option>\n          </select>\n          {errors.Level && <span>This field is required</span>}\n      </div>\n        <div className=\"form-control\">\n          <label>Message</label>\n          <textarea type=\"text\" name=\"Message\" ref={register({ required: true})} />\n        </div>\n        {errors.Message && <span>This field is required</span>}\n        <div data-netlify-recaptcha=\"true\"></div>\n        <div className=\"form-control\">\n          <label></label>\n          <button type=\"submit\">Send</button>\n        </div>\n      </form>\n    </div>\n  );\n}",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"68","replacedBy":"72"},{"ruleId":"70","replacedBy":"73"},{"ruleId":"68","replacedBy":"74"},{"ruleId":"70","replacedBy":"75"},{"ruleId":"68","replacedBy":"76"},{"ruleId":"70","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":6,"column":10,"nodeType":"80","messageId":"81","endLine":6,"endColumn":16},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],["82"],["83"],["82"],["83"],["82"],["83"],"no-unused-vars","'encode' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]